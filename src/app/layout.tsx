// import type { Metadata } from "next";
// import { Poppins, Geist, Geist_Mono, Roboto } from "next/font/google";
// import "./globals.css";
// import { BlogProvider } from "@/src/context/BlogContext";
// import { ThemeProvider } from "../components/theme/theme-provider";
// import { Toaster } from "@/components/ui/toaster";
// import {
//   Breadcrumb,
//   BreadcrumbItem,
//   BreadcrumbLink,
//   BreadcrumbList,
//   BreadcrumbSeparator,
// } from "@/components/ui/breadcrumb";
// import { ChevronsRight } from "lucide-react";
// import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
// import { AppSidebar } from "../components/blog/app-sidebar";
// import { ThemeToggle } from "@/src/components/theme/theme-toggle";
// import LogoutButton from "../components/LogoutButton";
// import { usePathname } from "next/navigation";
// import dynamic from "next/dynamic";
// import { Suspense } from "react";

// // Load fonts
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
//   display: "swap",
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
//   display: "swap",
// });

// const poppins = Poppins({
//   weight: ["400", "500", "600", "700"],
//   subsets: ["latin"],
//   variable: "--font-poppins",
//   display: "swap",
// });

// const roboto = Roboto({
//   weight: ["400", "500", "700"],
//   subsets: ["latin"],
//   variable: "--font-roboto",
//   display: "swap",
// });

// const metadata: Metadata = {
//   title: "StudentCoderTech Blog",
//   description: "Generated by create next app",
// };
// const SearchBox = dynamic(() => import("@/src/components/blog/search-box"), {
//   ssr: false,
// });
// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const pathName = usePathname();

//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body
//         className={`${poppins.variable} ${geistSans.variable} ${
//           geistMono.variable
//         } ${roboto.variable} antialiased w-full overflow-x-hidden  ${
//           pathName === "/add-blog" || pathName === "/blog" ? "" : "bg-[#f4f4f4]"
//         } `}
//       >
//         <BlogProvider>
//           <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
//             {pathName !== "/login" ? (
//               <>
//                 <SidebarProvider>
//                   {pathName === "/add-blog" || pathName === "/blog" ? (
//                     <AppSidebar />
//                   ) : (
//                     ""
//                   )}

//                   <main
//                     className="w-full"

//                     // className={`relative w-full ${
//                     //   pathName == "/file" ||
//                     //   pathName == "/add-blog" ||
//                     //   pathName == "/js"
//                     //     ? "md:w-[70%] md:mx-auto"
//                     //     : ""
//                     // }`}
//                   >
//                     <header className="sticky top-0 left-0 bg-background z-[100]">
//                       <div className="flex h-16 shrink-0 items-center gap-2 px-4">
//                         {pathName === "/add-blog" || pathName === "/blog" ? (
//                           <SidebarTrigger />
//                         ) : (
//                           ""
//                         )}

//                         <Breadcrumb className="py-1.5 px-3 rounded-lg hidden md:block">
//                           <BreadcrumbList>
//                             <BreadcrumbItem>
//                               <BreadcrumbLink href="#">Home</BreadcrumbLink>
//                             </BreadcrumbItem>
//                             <BreadcrumbSeparator>
//                               <ChevronsRight />
//                             </BreadcrumbSeparator>
//                             <BreadcrumbItem>
//                               <BreadcrumbLink href="#">Blog</BreadcrumbLink>
//                             </BreadcrumbItem>
//                             <BreadcrumbSeparator>
//                               <ChevronsRight />
//                             </BreadcrumbSeparator>
//                             <BreadcrumbItem>
//                               <BreadcrumbLink href="#">
//                                 Programming
//                               </BreadcrumbLink>
//                             </BreadcrumbItem>
//                           </BreadcrumbList>
//                         </Breadcrumb>

//                         <div className="ms-auto flex items-center gap-3">
//                           {/* <Button onClick={() => router.push("/login")}>
//                       Admin Login
//                     </Button> */}
//                           {pathName == "/blog" && <LogoutButton />}
//                           {pathName !== "/add-blog" && pathName !== "/blog" ? (
//                             <Suspense fallback={<div>Loading search...</div>}>
//                               <SearchBox />
//                             </Suspense>
//                           ) : (
//                             ""
//                           )}

//                           <ThemeToggle />
//                         </div>
//                       </div>
//                     </header>
//                     {children}
//                   </main>
//                 </SidebarProvider>
//               </>
//             ) : (
//               <>{children}</>
//             )}
//           </ThemeProvider>
//         </BlogProvider>

//         <Toaster />
//       </body>
//     </html>
//   );
// }

// app/layout.tsx
import "./globals.css";
import { Poppins, Geist, Geist_Mono, Roboto } from "next/font/google";
import { Toaster } from "@/components/ui/toaster";

import { ThemeProvider } from "@/src/components/theme/theme-provider";
import { BlogProviderWrapper } from "@/src/context/BlogProviderWrapper";

const poppins = Poppins({
  weight: ["400", "500", "600", "700"],
  subsets: ["latin"],
  variable: "--font-poppins",
  display: "swap",
});
const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
const roboto = Roboto({
  weight: ["400", "500", "700"],
  subsets: ["latin"],
  variable: "--font-roboto",
  display: "swap",
});

export const metadata = {
  title: "StudentCoderTech Blog",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${poppins.variable} ${geistSans.variable} ${geistMono.variable} ${roboto.variable} antialiased w-full overflow-x-hidden`}
      >
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <BlogProviderWrapper>{children}</BlogProviderWrapper>
        </ThemeProvider>
        <Toaster />
      </body>
    </html>
  );
}

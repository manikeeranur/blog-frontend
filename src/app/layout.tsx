"use client";

import type { Metadata } from "next";
import { Poppins, Geist, Geist_Mono, Roboto } from "next/font/google";
import "./globals.css";
import { BlogProvider } from "@/src/context/BlogContext";
import { ThemeProvider } from "../components/theme/theme-provider";
import { Toaster } from "@/components/ui/toaster";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb";
import { ChevronsRight } from "lucide-react";
import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
import { AppSidebar } from "../components/blog/app-sidebar";
import { ThemeToggle } from "@/src/components/theme/theme-toggle";
import LogoutButton from "../components/LogoutButton";
import { usePathname } from "next/navigation";

// Load fonts
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  display: "swap",
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
  display: "swap",
});

const poppins = Poppins({
  weight: ["400", "500", "600", "700"],
  subsets: ["latin"],
  variable: "--font-poppins",
  display: "swap",
});

const roboto = Roboto({
  weight: ["400", "500", "700"],
  subsets: ["latin"],
  variable: "--font-roboto",
  display: "swap",
});

const metadata: Metadata = {
  title: "StudentCoderTech Blog",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathName = usePathname();
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${poppins.variable} ${geistSans.variable} ${geistMono.variable} ${roboto.variable} antialiased`}
      >
        <BlogProvider>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            {pathName !== "/login" ? (
              <>
                <SidebarProvider>
                  <AppSidebar />
                  <main className="relative w-full">
                    <header className="flex h-16 shrink-0 items-center gap-2 px-4 sticky top-0 left-0 bg-background z-10">
                      <SidebarTrigger />

                      <Breadcrumb className="py-1.5 px-3 rounded-lg hidden md:block">
                        <BreadcrumbList>
                          <BreadcrumbItem>
                            <BreadcrumbLink href="#">Home</BreadcrumbLink>
                          </BreadcrumbItem>
                          <BreadcrumbSeparator>
                            <ChevronsRight />
                          </BreadcrumbSeparator>
                          <BreadcrumbItem>
                            <BreadcrumbLink href="#">Blog</BreadcrumbLink>
                          </BreadcrumbItem>
                          <BreadcrumbSeparator>
                            <ChevronsRight />
                          </BreadcrumbSeparator>
                          <BreadcrumbItem>
                            <BreadcrumbLink href="#">
                              Programming
                            </BreadcrumbLink>
                          </BreadcrumbItem>
                        </BreadcrumbList>
                      </Breadcrumb>

                      <div className="ms-auto flex items-center gap-3">
                        {/* <Button onClick={() => router.push("/login")}>
                      Admin Login
                    </Button> */}
                        {pathName == "/blog" && <LogoutButton />}

                        <ThemeToggle />
                      </div>
                    </header>
                    {children}
                  </main>
                </SidebarProvider>
              </>
            ) : (
              <>{children}</>
            )}
          </ThemeProvider>
        </BlogProvider>

        <Toaster />
      </body>
    </html>
  );
}
